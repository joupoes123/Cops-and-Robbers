# The stages define the order of execution for jobs.
stages:
  - test
  - package
  - release

variables:
  # Define the final package name as a variable for easy reuse.
  PACKAGE_NAME: "${CI_PROJECT_NAME}.zip"

# This job runs the linter to check for code quality.
lint-lua-code:
  stage: test
  tags:
    - cops-and-robbers
  # This tells GitLab that this job is allowed to finish with warnings
  # without failing the entire pipeline.
  allow_failure: true
  script:
    - echo "Running Lua linter..."
    - luacheck .
  rules:
    # Run this job on merge requests and pushes to the main branch for continuous checking.
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == "main"'

# This job packages the resource into a .zip file, but now only for versioned tags.
package-resource:
  stage: package
  tags:
    - cops-and-robbers
  script:
    - echo "Packaging resource for release..."
    # This uses PowerShell's native command to create the zip file.
    - Compress-Archive -Path "fxmanifest.lua", "*.lua", "html", "player_data", "docs", "*.json" -DestinationPath $PACKAGE_NAME -Force
  artifacts:
    # The artifact name is now tied to the Git tag for clear versioning.
    name: "$CI_PROJECT_NAME-$CI_COMMIT_TAG"
    paths:
      - $PACKAGE_NAME
    expire_in: 90 days
  rules:
    # This job ONLY runs when a Git tag is pushed (e.g., v1.0).
    - if: '$CI_COMMIT_TAG'

# This new job automatically creates a GitLab Release page with the .zip file attached.
create-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    # This job also only runs on Git tags.
    - if: '$CI_COMMIT_TAG'
  # This ensures the release job waits for the package job to finish and can access its artifacts.
  needs:
    - job: package-resource
      artifacts: true
  script:
    - echo "Creating release for tag $CI_COMMIT_TAG"
    # This command creates a formal GitLab Release and links the .zip from the previous job.
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${PACKAGE_NAME}\",\"url\":\"${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/${PACKAGE_NAME}?job=package-resource\"}"